docker pull mcr.microsoft.com/mssql/server:2017-latest

sudo docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=<YourStrong@Passw0rd>" \
   -p 1433:1433 --name cs411proj \
   -d mcr.microsoft.com/mssql/server:2017-latest

sudo docker exec -it cs411proj /opt/mssql-tools/bin/sqlcmd \
   -S localhost -U SA -P "<YourStrong@Passw0rd>" \
   -Q 'ALTER LOGIN SA WITH PASSWORD="CS411proj"'

CREATE DATABASE CS411Proj

CREATE TABLE tweets (
    tweet_id INT IDENTITY(1,1) PRIMARY KEY,
    tweet_date DATETIME,
    district INT,
    first_name CHAR(100),
    last_name CHAR(100),
    likes INT,
    party CHAR(100),
    candidate CHAR(100),
    tweet_text CHAR(560)
);

CREATE TABLE tweets_archive (
    tweet_id INT IDENTITY(1,1) PRIMARY KEY,
    week_start DATE,
    district INT,
    num_tweets INT,
    total_likes INT,
    party CHAR(100),
    candidate CHAR(100),
    most_liked_tweet CHAR(560),
    likes INT,
    first_name CHAR(100),
    last_name CHAR(100)
);

CREATE PROCEDURE keep_only_last_week
AS
    DECLARE @current_time DATETIME = GETDATE();
    DECLARE @cutoff DATE = CAST(CAST(CAST(@current_time AS FLOAT) - 6 AS DATETIME) AS DATE);
    DECLARE @one_week_ago DATE = CAST(CAST(CAST(@current_time AS FLOAT) - 7 AS DATETIME) AS DATE);

    INSERT INTO tweets_archive
    SELECT 
    CAST(DATEADD(wk, DATEDIFF(wk, 6, tweets.tweet_date), 0) AS DATE), subq.district, subq.num_tweets, subq.total_likes, subq.party, tweets.candidate, tweets.tweet_text, subq.max_likes, tweets.first_name, tweets.last_name
    FROM
        (SELECT DISTINCT tweets.district, tweets.party, COUNT(*) as num_tweets, SUM(tweets.likes) as total_likes, MAX(tweets.likes) as max_likes
        FROM tweets
        WHERE tweets.tweet_date < @cutoff
        GROUP BY tweets.district, tweets.party) subq, tweets
    WHERE tweets.district = subq.district
    AND tweets.party = subq.party
    AND tweets.likes = subq.max_likes
    AND tweets.tweet_date < @cutoff

    DELETE FROM tweets
    WHERE tweets.tweet_date < @cutoff;
GO


To call it, run:
    EXEC dbo.keep_only_last_week
